@Article{Zhou2003a,
  author  = {Zhou, Y. and Falsafi, B.},
  title   = {The Multicore Tsunami.},
  issue   = {5},
  pages   = {46--53},
  volume  = {36},
  journal = {IEEE Computer},
  year    = {2003},
}

@Electronic{Varia2010a,
  author       = {Varia, J.},
  editor       = {AWS},
  title        = {Disaster Recovery in the Cloud with AWS},
  organization = {Amazon Web Services},
  pubstate     = {2010},
  journal      = {AWS Blogs},
  publisher    = {Amazon Web Services},
  school       = {Amazon Web Services},
  year         = {2010},
}

@Article{Sundararajan2000a,
  author       = {Sundararajan, V. and Garc√≠a-Molina, H.},
  journaltitle = {ACM Computing Surveys (CSUR)},
  title        = {Compression and Coding Algorithms for Multimedia Databases},
  issue        = {1},
  pages        = {48--72},
  volume       = {32},
  journal      = {ACM Computing Surveys (CSUR)},
  year         = {2000},
}

@Article{Satyanarayanan2009a,
  author    = {Mahadev Satyanarayanan and Victor Bahl and Ramon Caceres and Nigel Davies},
  date      = {2011},
  title     = {The Case for VM-based Cloudlets in Mobile Computing},
  doi       = {10.1109/mprv.2009.64},
  issn      = {1536-1268},
  issue     = {4},
  pages     = {14--23},
  url       = {https://www.semanticscholar.org/paper/6b42da07552dd40974f793f8da1ca6521f1e49e8},
  volume    = {8},
  abstract  = {Mobile computing continuously evolve through the sustained effort of many researchers. It seamlessly augments users' cognitive abilities via compute-intensive capabilities such as speech recognition, natural language processing, etc. By thus empowering mobile users, we could transform many areas of human activity. This article discusses the technical obstacles to these transformations and proposes a new architecture for overcoming them. In this architecture, a mobile user exploits virtual machine (VM) technology to rapidly instantiate customized service software on a nearby cloudlet and then uses that service over a wireless LAN; the mobile device typically functions as a thin client with respect to the service. A cloudlet is a trusted, resource-rich computer or cluster of computers that's well-connected to the Internet and available for use by nearby mobile devices. Our strategy of leveraging transiently customized proximate infrastructure as a mobile device moves with its user through the physical world is called cloudlet-based, resource-rich, mobile computing. Crisp interactive response, which is essential for seamless augmentation of human cognition, is easily achieved in this architecture because of the cloudlet's physical proximity and one-hop network latency. Using a cloudlet also simplifies the challenge of meeting the peak bandwidth demand of multiple users interactively generating and receiving media such as high-definition video and high-resolution images. Rapid customization of infrastructure for diverse applications emerges as a critical requirement, and our results from a proof-of-concept prototype suggest that VM technology can indeed help meet this requirement.},
  journal   = {IEEE Pervasive Computing},
  publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
  venue     = {IEEE pervasive computing},
  year      = {2009},
}

@Article{Ramaswamy2006a,
  author  = {Ramaswamy, L. and Balakrishnan, H. and Stoica, I.},
  title   = {Handling Churn in a DHT},
  issue   = {4},
  pages   = {121--132},
  volume  = {36},
  journal = {ACM SIGCOMM Computer Communication Review},
  year    = {2006},
}

@Article{M.K.1999a,
  author  = {M. K., Ganger and G. R. Hunt and G. Ellis and C. S. Soules and C. A. McKusick},
  title   = {FreeBSD: A Research Unix for Servers},
  issue   = {4},
  pages   = {295--329},
  volume  = {19},
  journal = {ACM Transactions on Computer Systems (TOCS)},
  year    = {1999},
}

@Article{Leckie2002a,
  author         = {Leckie, A. and Seltzer, M.},
  title          = {Disk Arrays: High-Performance, Reliable Secondary Storage},
  issue          = {3},
  pages          = {265--294},
  volume         = {34},
  journal        = {ACM Computing Surveys (CSUR)},
  msbib-accessed = {2024-10-03},
  year           = {2002},
}

@Electronic{Khan2020a,
  author         = {Khan, S.},
  editor         = {AWS},
  title          = {Comparing your on-premises storage patterns with AWS Storage services},
  url            = {https://aws.amazon.com/blogs/storage/comparing-your-on-premises-storage-patterns-with-aws-storage-services/},
  organization   = {Amazon Web Services},
  journal        = {AWS Blogs},
  month          = aug,
  msbib-day      = {20},
  msbib-accessed = {2024-10-03},
  year           = {2020},
}

@Article{Ha2010a,
  author       = {Sangtae Ha and I. Rhee and Lisong Xu},
  journaltitle = {ACM SIGOPS Operating Systems Review},
  title        = {CUBIC: a new TCP-friendly high-speed TCP variant},
  doi          = {10.1145/1400097.1400105},
  issn         = {0163-5980},
  issue        = {5},
  number       = {5},
  pages        = {64--74},
  url          = {https://www.semanticscholar.org/paper/31238dbf9945bf934663637b2013ff2cc8971c4b},
  volume       = {42},
  abstract     = {CUBIC is a congestion control protocol for TCP (transmission control protocol) and the current default TCP algorithm in Linux. The protocol modifies the linear window growth function of existing TCP standards to be a cubic function in order to improve the scalability of TCP over fast and long distance networks. It also achieves more equitable bandwidth allocations among flows with different RTTs (round trip times) by making the window growth to be independent of RTT -- thus those flows grow their congestion window at the same rate. During steady state, CUBIC increases the window size aggressively when the window is far from the saturation point, and the slowly when it is close to the saturation point. This feature allows CUBIC to be very scalable when the bandwidth and delay product of the network is large, and at the same time, be highly stable and also fair to standard TCP flows. The implementation of CUBIC in Linux has gone through several upgrades. This paper documents its design, implementation, performance and evolution as the default TCP algorithm of Linux.},
  journal      = {ACM SIGOPS Operating Systems Review},
  month        = jul,
  publisher    = {Association for Computing Machinery (ACM)},
  venue        = {OPSR},
  year         = {2010},
}

@Article{Fox1997a,
  author         = {Fox, A. and Griffith, R.},
  title          = {Layout-aware storage management},
  issue          = {1},
  pages          = {44--53},
  volume         = {25},
  journal        = {ACM SIGMETRICS Performance Evaluation Review},
  msbib-accessed = {0202},
  year           = {1997},
}

@Electronic{AWS2025k,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Storage Gateway Case Study},
  url            = {https://aws.amazon.com/storagegateway/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025j,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Storage Gateway},
  url            = {https://aws.amazon.com/storagegateway/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025i,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Snow Family Case Study},
  url            = {https://aws.amazon.com/snow/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025h,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Snow Family},
  url            = {https://aws.amazon.com/snow/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025g,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Elastic Disaster Recovery Case Study},
  url            = {https://aws.amazon.com/disaster-recovery/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025f,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Backup Case Study},
  url            = {https://aws.amazon.com/backup/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025e,
  author         = {AWS},
  editor         = {AWS},
  title          = {AWS Backup},
  url            = {https://aws.amazon.com/backup/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025d,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon Simple Storage Service (S3)},
  url            = {https://aws.amazon.com/s3/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-04},
  year           = {2025},
}

@Electronic{AWS2025a,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon S3 Case Study},
  url            = {https://aws.amazon.com/s3/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025c,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon S3 Glacier Case Study},
  url            = {https://aws.amazon.com/glacier/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2025b,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon S3 Glacier},
  url            = {https://aws.amazon.com/glacier/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2025},
}

@Electronic{AWS2024f,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon FSx Case Study},
  url            = {https://aws.amazon.com/fsx/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2024},
}

@Electronic{AWS2024e,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon FSx},
  url            = {https://aws.amazon.com/fsx/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2024},
}

@Electronic{AWS2024d,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon Elastic File System (EFS)},
  url            = {https://aws.amazon.com/efs/},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2024},
}

@Electronic{AWS2024c,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon Elastic Block Store (EBS)},
  url            = {https://aws.amazon.com/ebs/},
  organization   = {Amazon Web Services},
  journal        = {AWS Documentation},
  msbib-accessed = {2024-10-03},
  year           = {2024},
}

@Electronic{AWS2024a,
  author       = {AWS},
  editor       = {AWS},
  title        = {Amazon EBS Case Study},
  url          = {https://aws.amazon.com/ebs/use-cases/},
  organization = {Amazon Web Services},
  journal      = {AWS Case Studies},
  year         = {2024},
}

@Electronic{AWS2024b,
  author         = {AWS},
  editor         = {AWS},
  title          = {Amazon EFS Case Study},
  url            = {https://aws.amazon.com/efs/use-cases/},
  organization   = {Amazon Web Services},
  journal        = {AWS Case Studies},
  msbib-accessed = {2024-10-03},
  year           = {2024},
}

@Comment{jabref-meta: databaseType:biblatex;}
